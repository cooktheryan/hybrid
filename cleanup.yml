- hosts: nodes
  become: yes
  become_user: root
  vars:
     user: "{{lookup('env','USER')}}"
     config_dir: "/etc/origin/master"
     apihost: "{{ lookup('file', '/root/api_host.txt') }}"
  tasks:
  - name: Make sure azure directory exists
    file: path=/etc/azure state=directory
  - name: Fix firewall rule
    shell: iptables -A OS_FIREWALL_ALLOW -p udp -m state --state NEW -m udp --dport 6081 -j ACCEPT 
  - name: Remove redhat/openshift-ovs-subnet
    lineinfile:
      path: /etc/origin/node/node-config.yaml
      regexp: '^.*redhat/openshift-ovs-subnet.*$'
      backup: yes
      state: absent
  - name: Clear old net.d network conf
    file: path=/etc/cni/net.d/80-openshift-network.conf  state=absent
  - name: Clear node file
    file: path=/usr/local/bin/ovn-kubernetes.sh  state=absent
  - name: Create ovn-kubernetes-node.sh
    blockinfile:
      dest: /usr/local/bin/ovn-kubernetes-node.sh
      create: yes
      mode: u+rwx
      block: |

         set -o errexit
         set -o nounset
         set -o pipefail

         function ovn-kubernetes-node() {
            local config_dir=$1
            token=$(cat ${config_dir}/ovn.token)

            apiserver="{{lookup('file', '/root/api_host.txt')}}"
            cluster_cidr="10.128.0.0/14"

            echo "Enabling and start ovn-kubernetes node services"
            /usr/bin/ovnkube \
                 --k8s-apiserver "${apiserver}" \
                 --k8s-cacert "${config_dir}/ca.crt" \
                 --k8s-token "${token}" \
                 --cluster-subnet "${cluster_cidr}" \
                 --nb-address "tcp://{{lookup('dig','master1')}}:6641" \
                 --sb-address "tcp://{{lookup('dig','master1')}}:6642" \
                 --init-gateways \
                 --init-node `hostname`
         }
         ovn-kubernetes-node "{{ config_dir }}"
- hosts: nodes:!master1
  become: yes
  become_user: root
  tasks:
  - name: enable ovn-kubernetes-node.service
    shell: systemctl restart ovn-kubernetes-node.service
- hosts: masters
  become: yes
  become_user: root
  tasks:
  - name: restart atomic-openshift-master-controllers
    service:
        name: atomic-openshift-master-controllers
        state: restarted
  - name: restart atomic-openshift-master-api
    service:
        name: atomic-openshift-master-api
        state: restarted
- hosts: nodes
  become: yes
  become_user: root
  tasks:
  - name: restart atomic-openshift-node
    service:
        name: atomic-openshift-node
        state: restarted

