- hosts: master1
  become: yes
  become_user: root
  tasks:
  - name: Create the ovn scc account
    shell: oc create serviceaccount ovn
    ignore_errors: yes
  - name: Add the cluster role
    shell: oc adm policy add-cluster-role-to-user cluster-admin -z ovn
  - name: Add the anyid field
    shell:  oc adm policy add-scc-to-user anyuid -z ovn
  - name: Save the token for later usage
    shell: oc sa get-token ovn
    register: ovn_key
  - local_action: copy content={{ ovn_key.stdout }} dest=/root/ovn.token
- hosts: master1
  become: yes
  become_user: root
  tasks:
  - name: Get the /etc/origin/master/ca.crt
    fetch:
          src: /etc/origin/master/ca.crt
          dest: /root/
          flat: yes
- hosts: localhost
  become: yes
  become_user: root
  tasks:
  - name: Get server url
    shell: "oc whoami --show-server"
    register: api_url
  - local_action: copy content="{{ api_url.stdout }}" dest=/root/api_host.txt
  - name: Install go
    yum:
      name: golang
      enablerepo: rhel-7-server-optional-rpms
  - name: Clear previous build if it exists
    file: path=~/ovn-kubernetes state=absent
  - name: Clone to ovn-kubernetes repo
    shell: git clone https://github.com/openvswitch/ovn-kubernetes ~/ovn-kubernetes
  - name: Create destination directory
    file: path=/opt/cni/bin state=directory
  - name: Create the ovn-kubernetes directory
    file: path=~/ovn-kubernetes state=directory
  - name: Build The Controller (Linux)
    shell: cd ~/ovn-kubernetes;cd go-controller;make;make install
  - name: Build The Controller (Windows)
    shell: cd ~/ovn-kubernetes;cd go-controller;make clean;make windows
  - name: Create directory for cni plugins
    file: path=/tmp/cniplugin state=directory
  - name: Get cni plugins
    shell: wget -q https://github.com/containernetworking/plugins/releases/download/v0.7.1/cni-plugins-amd64-v0.7.1.tgz; tar xvzf cni-plugins-amd64-v0.7.1.tgz -C /tmp/cniplugin
- hosts: nodes
  become: yes
  become_user: root
  tasks:
  - name: Create the master directory 
    file: path=/etc/origin/master state=directory
  - name: Place Crt 
    copy:
       src: /root/ca.crt
       dest: /etc/origin/master
       mode: u+rw
  - name: Create /opt/cni/bin
    file: path=/opt/cni/bin state=directory
  - name: Create openvswitch /etc directory
    file: path=/etc/openvswitch state=directory
  - name: Push the ovn-k8s-cni-overlay to all nodes
    copy:
      src: /opt/cni/bin/ovn-k8s-cni-overlay
      dest: /opt/cni/bin/ovn-k8s-cni-overlay
      mode: u+rwx
  - name: Push the ovnkube to all nodes
    copy:
      src: /usr/bin/ovnkube
      dest: /usr/bin/ovnkube
      mode: u+rwx
  - name: Push the cni loopback plugin to all nodes
    copy:
      src: /tmp/cniplugin/loopback
      dest: /opt/cni/bin/loopback
      mode: u+rwx
  - name: Create destination directory
    file: path=/etc/cni/net.d state=directory
  - name: Create cni config
    copy:
      dest: /etc/cni/net.d/10-ovn-kubernetes.conf
      content: |
               {"name":"ovn-kubernetes", "type":"ovn-k8s-cni-overlay"}
  - name: Remove old network setup
    shell: cd /etc/origin/node;sed -i.bak '/networkConfig:/,/nodeName:/{//!d}' node-config.yaml
  - name: Add new network setup
    blockinfile:
       dest: /etc/origin/node/node-config.yaml
       insertafter: "networkConfig:"
       create: no
       block: |
                 #
                    mtu: 1450
                    networkPluginName: cni
- hosts: nodes
  become: yes
  become_user: root
  vars:
     user: "{{lookup('env','USER')}}"
     config_dir: "/etc/origin/master"
     apihost: "{{ lookup('file', '/root/api_host.txt') }}"
  tasks:
  - debug: msg="User is {{ user }}"

  - name: Remove atomic-openshift-sdn-ovs
    yum:
      name=atomic-openshift-sdn-ovs
      state=absent
  - name: Remove openvswitch
    yum:
      name=openvswitch
      state=absent
  - name: Copy token to all masters
    copy: 
       src: /root/ovn.token
       dest: "{{ config_dir }}/ovn.token"
  - name: Create systemd file for ovn-kubernetes node
    blockinfile:
      dest: /etc/systemd/system/ovn-kubernetes-node.service
      create: yes
      block: |
        [Unit]
        Description=Setup for ovn-kubernetes Node

        [Service]
        Type=simple
        ExecStart=/bin/bash /usr/local/bin/ovn-kubernetes-node.sh

        [Install]
        WantedBy=multi-user.target

  - name: Create systemd file for ovn-kubernetes master
    blockinfile:
      dest: /etc/systemd/system/ovn-kubernetes-master.service
      create: yes
      block: |
        [Unit]
        Description=Setup for ovn-kubernetes master

        [Service]
        Type=simple
        ExecStart=/bin/bash /usr/local/bin/ovn-kubernetes-master.sh

        [Install]
        WantedBy=multi-user.target
        #WantedBy=openshift-master.service
        #WantedBy=ovn-kubernetes-master-setup.service

  - name: install upstream openvswitch 2.7
    shell: rpm --replacepkgs -i http://cbs.centos.org/kojifiles/packages/openvswitch/2.7.0/1.el7/x86_64/openvswitch-2.7.0-1.el7.x86_64.rpm
  - name: Install ovn common
    shell: rpm -i http://cbs.centos.org/kojifiles/packages/openvswitch/2.7.0/1.el7/x86_64/openvswitch-ovn-common-2.7.0-1.el7.x86_64.rpm
  - name: install ovn central
    shell: rpm -i http://cbs.centos.org/kojifiles/packages/openvswitch/2.7.0/1.el7/x86_64/openvswitch-ovn-central-2.7.0-1.el7.x86_64.rpm
  - name: Install ovn host
    shell: rpm -i http://cbs.centos.org/kojifiles/packages/openvswitch/2.7.0/1.el7/x86_64/openvswitch-ovn-host-2.7.0-1.el7.x86_64.rpm
  - name: Install python-openvswitch
    shell: yum -y install python-openvswitch
  - name: Install ovn docker
    shell: rpm -i http://cbs.centos.org/kojifiles/packages/openvswitch/2.7.0/1.el7/x86_64/openvswitch-ovn-docker-2.7.0-1.el7.x86_64.rpm
  - name: Install ovn vtep
    shell: rpm -i http://cbs.centos.org/kojifiles/packages/openvswitch/2.7.0/1.el7/x86_64/openvswitch-ovn-vtep-2.7.0-1.el7.x86_64.rpm
  - name: Install ovn devel
    shell: rpm --replacepkgs -i http://cbs.centos.org/kojifiles/packages/openvswitch/2.7.0/1.el7/x86_64/openvswitch-devel-2.7.0-1.el7.x86_64.rpm
  - name: Clear any previous ovn-kubernetes-master.sh
    file: path=/usr/local/bin/ovn-kubernetes-master.sh state=absent
  - name: Create ovn-kubernetes-master.sh 
    blockinfile:
      dest: /usr/local/bin/ovn-kubernetes-master.sh
      create: yes
      mode: u+rwx
      block: |

         set -o errexit
         set -o nounset
         set -o pipefail

         function ovn-kubernetes-master() {
            local config_dir=$1
            token=$(cat ${config_dir}/ovn.token)

            local master_config="${config_dir}/master-config.yaml"
            cluster_cidr="10.128.0.0/14"
            apiserver="{{lookup('file', '/root/api_host.txt')}}" 

            echo "Enabling and start ovn-kubernetes master services"
            /usr/bin/ovnkube \
                 --k8s-apiserver "${apiserver}" \
                 --k8s-cacert "${config_dir}/ca.crt" \
                 --k8s-token "${token}" \
                 --cluster-subnet "${cluster_cidr}" \
                 --nb-address "tcp://{{lookup('dig','master1')}}:6641" \
                  -sb-address "tcp://{{lookup('dig','master1')}}:6642" \
                  --init-master `hostname` \
                  --net-controller
         }
         ovn-kubernetes-master "{{ config_dir }}"
  - name: Create ovn-kubernetes-node.sh 
    blockinfile:
      dest: /usr/local/bin/ovn-kubernetes-node.sh
      create: yes
      mode: u+rwx
      block: |

         set -o errexit
         set -o nounset
         set -o pipefail

         function ovn-kubernetes-node() {
            local config_dir=$1
            token=$(cat ${config_dir}/ovn.token)

            apiserver="{{lookup('file', '/root/api_host.txt')}}" 
            cluster_cidr="10.128.0.0/14"

            echo "Enabling and start ovn-kubernetes node services"
            /usr/bin/ovnkube \
                 --k8s-apiserver "${apiserver}" \
                 --k8s-cacert "${config_dir}/ca.crt" \
                 --k8s-token "${token}" \
                 --cluster-subnet "${cluster_cidr}" \
                 --nb-address "tcp://{{lookup('dig','master1')}}:6641" \
                 --sb-address "tcp://{{lookup('dig','master1')}}:6642" \
                 --init-gateways \
                 --init-node `hostname` 
         }
         ovn-kubernetes-node "{{ config_dir }}"
  - name: Clear old config file
    file: path=/etc/openvswitch/ovn_k8s.conf state=absent
  - name: Create /etc/openvswitch/ovn_k8s.conf
    blockinfile:
      dest: /etc/openvswitch/ovn_k8s.conf
      create: yes
      block: |
         [logging]
         #loglevel=5
         #logfile=/var/log/ovnkube.log
         #https://gswmon.southcentralus.cloudapp.azure.com:8443
         [kubernetes]
         apiserver="{{lookup('file', '/root/api_host.txt')}}"  # kubernetes api server, or the load balanced address for the multiple api server case
         token="{{lookup('file', '/root/ovn.token')}}"
         cacert=/etc/origin/master/ca.crt

         [ovnnorth]
         address="tcp://{{lookup('dig','master1')}}:6641" # this master machine's IP address

         [ovnsouth]
         address="tcp://{{lookup('dig','master1')}}:6642"
  - name: open firewall 6641
    shell: iptables -A OS_FIREWALL_ALLOW -p tcp -m state --state NEW -m tcp --dport 6641 -j ACCEPT
  - name: open firewall 6642
    shell: iptables -A OS_FIREWALL_ALLOW -p tcp -m state --state NEW -m tcp --dport 6642 -j ACCEPT
  - name: open firewall 6081
    shell: iptables -A OS_FIREWALL_ALLOW -p udp -m state --state NEW -m udp --dport 6081 -j ACCEPT
  - name: Save iptables rules
    shell: service iptables save
  - name: enable ovsdb-server
    service:
        name: ovsdb-server
        state: started
        enabled: yes
  - name: enable ovn-northd
    service:
        name: ovn-northd
        state: started
        enabled: yes
  - name: Start openvswitch
    service:
        name: openvswitch
        state: started
        enabled: yes
  - name: Start ovn-controller
    service:
        name: ovn-controller
        state: started
        enabled: yes
  - name: enable ovn-kubernetes-master.service
    service:
        name: ovn-kubernetes-master.service
        state: stopped
        enabled: no
  - name: enable ovn-kubernetes-node.service
    service:
        name: ovn-kubernetes-node.service
        state: stopped
        enabled: no
- hosts: masters
  become: yes
  become_user: root
  tasks:
  - name: Create destination directory
    file: path=/etc/cni/net.d state=directory
  - name: Create cni config
    copy:
      dest: /etc/cni/net.d/10-ovn-kubernetes.conf
      content: |
               {"name":"ovn-kubernetes", "type":"ovn-k8s-cni-overlay"}
  - name: Remove old network setup
    shell: cd /etc/origin/master;sed -i.bak '/networkConfig:/,/oauthConfig:/{//!d}' master-config.yaml
  - name: Add new network setup
    blockinfile:
       dest: /etc/origin/master/master-config.yaml
       insertafter: "networkConfig:"
       create: no
       block: |
                 #
                   clusterNetworkCIDR: 10.128.0.0/14
                   clusterNetworks:
                   - cidr: 10.128.0.0/14
                     hostSubnetLength: 9
                   externalIPNetworkCIDRs: null
                   hostSubnetLength: 9
                   ingressIPNetworkCIDR: 172.29.0.0/16
                   networkPluginName: cni
                   serviceNetworkCIDR: 172.30.0.0/16
  - name: restart atomic-openshift-master-controllers
    shell: systemctl restart atomic-openshift-master-controllers
  - name: restart atomic-openshift-master-api
    shell: systemctl restart atomic-openshift-master-api
- hosts: nodes
  become: yes
  become_user: root
  tasks:
  - name: restart atomic-openshift-node
    shell: systemctl restart  atomic-openshift-node
- hosts: node01
  tasks:
  - name: Grab /etc/openvswitch/ovn_k8s.conf
    fetch: 
      src:  /etc/openvswitch/ovn_k8s.conf
      dest: /tmp/ovn_k8s.conf
      flat: yes
- hosts: nodes:!master1
  become: yes
  become_user: root
  tasks:
  - name: enable ovn-kubernetes-node.service
    service:
        name: ovn-kubernetes-node.service
        state: started
        enabled: yes
  - name: Start ovn-kubernetes-node
    shell: systemctl start ovn-kubernetes-node
- hosts: master1
  become: yes
  become_user: root
  tasks:
  - name: enable ovn-kubernetes-master.service
    service:
        name: ovn-kubernetes-master.service
        state: started
        enabled: yes
  - name: enable ovn-kubernetes-node.service
    service:
        name: ovn-kubernetes-node.service
        state: started
        enabled: yes
  - name: Start ovn-kubernetes-master
    shell: systemctl start ovn-kubernetes-master
  - name: Start ovn-kubernetes-node
    shell: systemctl start ovn-kubernetes-node
- hosts: windows
  gather_facts: no
  tasks:
  - name: Copy ovn_k8s.conf to windows nodes
    win_copy:
       src: /tmp/ovn_k8s.conf
       dest: C:\Program Files\Cloudbase Solutions\Open vSwitch\conf\ovn_k8s.conf
       force: yes
  - name: copy ovn-k8s-cni-overlay.exe
    win_copy:
       src: /root/ovn-kubernetes/go-controller/_output/go/windows/ovn-k8s-cni-overlay.exe
       dest: /bin/ovn-k8s-cni-overlay.exe
       force: yes
  - name: copy ovn ovnkube.exe
    win_copy:
       src: /root/ovn-kubernetes/go-controller/_output/go/windows/ovn-k8s-cni-overlay.exe
       dest: /bin/ovnkube.exe
       force: yes
